import{_ as e,C as p,c as h,o as k,a2 as l,j as i,a,G as t}from"./chunks/framework.DYH4TpTR.js";const es=JSON.parse('{"title":"DAOインタフェース","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"DAOインタフェース"}],["meta",{"name":"og:url","content":"/uroborosql-doc/basics/entity-api.html"}]]},"headers":[],"relativePath":"basics/entity-api.md","filePath":"basics/entity-api.md"}'),r={name:"basics/entity-api.md"},d={id:"条件指定検索-sqlagent-query",tabindex:"-1"},E={tabindex:"0"},g={style:{"text-align":"left"}},o={style:{"text-align":"left"}},y={style:{"text-align":"left"}},u={id:"ソート順-sqlentityquery-asc-desc-や取得データの件数-limit-、開始位置-offset-、悲観ロック-forupdate-forupdatenowait-forupdatewait-の指定",tabindex:"-1"},b={tabindex:"0"},c={style:{"text-align":"left"}},m={style:{"text-align":"left"}},F={style:{"text-align":"left"}},A={style:{"text-align":"left"}},C={id:"オプティマイザーヒントの指定-sqlentityquery-hint",tabindex:"-1"},x={tabindex:"0"},f={style:{"text-align":"left"}},D={id:"取得するカラム-除外するカラムの指定-includecolumns-excludecolumns",tabindex:"-1"},v={id:"集約関数-sqlentityquery-count-sum-sum-min-max-exists-notexists",tabindex:"-1"},q={tabindex:"0"},B={style:{"text-align":"left"}},S={id:"複数件の挿入-sqlagent-inserts-insertsandreturn",tabindex:"-1"},T={tabindex:"0"},I={style:{"text-align":"left"}},N={style:{"text-align":"left"}},P={style:{"text-align":"left"}},L={style:{"text-align":"left"}},R={style:{"text-align":"left"}},w={style:{"text-align":"left"}},j={style:{"text-align":"left"}},V={style:{"text-align":"left"}},U={tabindex:"0"},_={style:{"text-align":"left"}},O={id:"条件指定による複数件の更新-sqlagent-update",tabindex:"-1"},Q={id:"複数件の更新-sqlagent-updates-updatesandreturn",tabindex:"-1"},W={id:"エンティティのマージ",tabindex:"-1"},G={tabindex:"0"},M={style:{"text-align":"left"}},K={id:"pkを指定した複数件の削除-sqlagent-delete",tabindex:"-1"},H={id:"条件指定による複数件の削除-sqlagent-delete",tabindex:"-1"},J={id:"全ての行を削除-sqlagent-truncate",tabindex:"-1"},$={class:"tip custom-block"},Y={tabindex:"0"},z={style:{"text-align":"left"}},X={id:"id-generatedvalue-sequencegenerator",tabindex:"-1"};function Z(ss,s,is,as,ns,ts){const n=p("Badge");return k(),h("div",null,[s[180]||(s[180]=l(`<h1 id="daoインタフェース" tabindex="-1">DAOインタフェース <a class="header-anchor" href="#daoインタフェース" aria-label="Permalink to &quot;DAOインタフェース&quot;">​</a></h1><p><strong>uroboroSQL</strong>はDAO(Data Access Object)を用いた単一テーブルへのCRUDに対応しています。</p><p>下記のテーブルとそれに対応するエンティティクラスを例として説明します。</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- MySQLの場合</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  emp_no </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto_increment</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , first_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , birth_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , gender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , lock_version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employee_PKC </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (emp_no)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Postgresqlの場合</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  emp_no </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">serial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , first_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , birth_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , gender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , lock_version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  , </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employee_PKC </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (emp_no)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> empNo;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String firstName;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String lastName;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LocalDate birthDate;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Gender gender;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Optional&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Optional.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lockVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 中略 getter/setter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="エンティティクラスの検索" tabindex="-1">エンティティクラスの検索 <a class="header-anchor" href="#エンティティクラスの検索" aria-label="Permalink to &quot;エンティティクラスの検索&quot;">​</a></h2><h3 id="キーを指定した1件取得-sqlagent-find" tabindex="-1">キーを指定した１件取得(<code>SqlAgent#find</code>) <a class="header-anchor" href="#キーを指定した1件取得-sqlagent-find" aria-label="Permalink to &quot;キーを指定した１件取得(\`SqlAgent#find\`)&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#find(Class&lt;E&gt;, Object...)</td><td style="text-align:left;">Optional&lt;E&gt;</td></tr></tbody></table><p>主キーを指定してエンティティを取得します。PKカラムの数と引数に指定するキーの数は合わせる必要があります。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// emp_no = 1 のレコードをエンティティとして取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Optional&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,10)),i("h3",d,[s[0]||(s[0]=a("条件指定検索(")),s[1]||(s[1]=i("code",null,"SqlAgent#query",-1)),s[2]||(s[2]=a(") ")),t(n,{text:"0.11.0+"}),s[3]||(s[3]=a()),s[4]||(s[4]=i("a",{class:"header-anchor",href:"#条件指定検索-sqlagent-query","aria-label":'Permalink to "条件指定検索(`SqlAgent#query`) <Badge text="0.11.0+"/>"'},"​",-1))]),s[181]||(s[181]=l('<table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#query(Class&lt;E&gt;)</td><td style="text-align:left;">SqlEntityQuery&lt;E&gt;</td></tr></tbody></table><p>エンティティクラスを利用した検索を行うためのオブジェクト（<code>SqlEntityQuery</code>)を取得します。<br><code>SqlEntityQuery</code>に対して抽出条件の指定を行い、抽出条件に該当するエンティティを取得します。</p><hr><h3 id="抽出条件の指定-sqlentityquery-equal-notequal-greaterthan-lessthan-greaterequal-lessequal-in-notin-like-startswith-endswith-contains-notlike-notstartswith-notendswith-notcontains-between-notbetween-betweencolumns-notbetweencolumns-isnull-isnotnull-where" tabindex="-1">抽出条件の指定(<code>SqlEntityQuery#equal</code> /<code>#notEqual</code> /<code>#greaterThan</code> /<code>#lessThan</code> /<code>#greaterEqual</code> /<code>#lessEqual</code> /<code>#in</code> /<code>#notIn</code> /<code>#like</code> /<code>#startsWith</code> /<code>#endsWith</code> /<code>#contains</code> /<code>#notLike</code> /<code>#notStartsWith</code> /<code>#notEndsWith</code> /<code>#notContains</code> /<code>#between</code> /<code>#notBetween</code> /<code>#betweenColumns</code> /<code>#notBetweenColumns</code> /<code>#isNull</code> /<code>#isNotNull</code> /<code>#where</code>) <a class="header-anchor" href="#抽出条件の指定-sqlentityquery-equal-notequal-greaterthan-lessthan-greaterequal-lessequal-in-notin-like-startswith-endswith-contains-notlike-notstartswith-notendswith-notcontains-between-notbetween-betweencolumns-notbetweencolumns-isnull-isnotnull-where" aria-label="Permalink to &quot;抽出条件の指定(`SqlEntityQuery#equal` /`#notEqual` /`#greaterThan` /`#lessThan` /`#greaterEqual` /`#lessEqual` /`#in` /`#notIn` /`#like` /`#startsWith` /`#endsWith` /`#contains` /`#notLike` /`#notStartsWith` /`#notEndsWith` /`#notContains` /`#between` /`#notBetween` /`#betweenColumns` /`#notBetweenColumns` /`#isNull` /`#isNotNull` /`#where`)&quot;">​</a></h3>',4)),i("table",E,[s[38]||(s[38]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"抽出条件指定メソッド記述例"),i("th",{style:{"text-align":"left"}},"生成されるwhere句の条件式"),i("th",{style:{"text-align":"left"}},"補足説明")])],-1)),i("tbody",null,[s[14]||(s[14]=i("tr",null,[i("td",{style:{"text-align":"left"}},'equal("col", "value")'),i("td",{style:{"text-align":"left"}},"col = 'value'"),i("td",{style:{"text-align":"left"}})],-1)),s[15]||(s[15]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notEqual("col", "value")'),i("td",{style:{"text-align":"left"}},"col != 'value'"),i("td",{style:{"text-align":"left"}})],-1)),s[16]||(s[16]=i("tr",null,[i("td",{style:{"text-align":"left"}},'greaterThan("col", 1)'),i("td",{style:{"text-align":"left"}},"col > 1"),i("td",{style:{"text-align":"left"}})],-1)),s[17]||(s[17]=i("tr",null,[i("td",{style:{"text-align":"left"}},'lessThan("col", 1)'),i("td",{style:{"text-align":"left"}},"col < 1"),i("td",{style:{"text-align":"left"}})],-1)),s[18]||(s[18]=i("tr",null,[i("td",{style:{"text-align":"left"}},'greaterEqual("col", 1)'),i("td",{style:{"text-align":"left"}},"col >= 1"),i("td",{style:{"text-align":"left"}})],-1)),s[19]||(s[19]=i("tr",null,[i("td",{style:{"text-align":"left"}},'lessEqual("col", 1)'),i("td",{style:{"text-align":"left"}},"col <= 1"),i("td",{style:{"text-align":"left"}})],-1)),s[20]||(s[20]=i("tr",null,[i("td",{style:{"text-align":"left"}},'in("col", "val1", "val2")'),i("td",{style:{"text-align":"left"}},"col in ('val1', 'val2')"),i("td",{style:{"text-align":"left"}})],-1)),s[21]||(s[21]=i("tr",null,[i("td",{style:{"text-align":"left"}},'in("col", List.of("val1", "val2"))'),i("td",{style:{"text-align":"left"}},"col in ('val1', 'val2')"),i("td",{style:{"text-align":"left"}})],-1)),s[22]||(s[22]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notIn("col", "val1", "val2")'),i("td",{style:{"text-align":"left"}},"col not in ('val1', 'val2')"),i("td",{style:{"text-align":"left"}})],-1)),s[23]||(s[23]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notIn("col", List.of("val1", "val2"))'),i("td",{style:{"text-align":"left"}},"col not in ('val1', 'val2')"),i("td",{style:{"text-align":"left"}})],-1)),s[24]||(s[24]=i("tr",null,[i("td",{style:{"text-align":"left"}},'like("col", "%val%")'),i("td",{style:{"text-align":"left"}},"like '%val%'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされない")])],-1)),s[25]||(s[25]=i("tr",null,[i("td",{style:{"text-align":"left"}},'startsWith("col", "val")'),i("td",{style:{"text-align":"left"}},"like 'val%'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされる")])],-1)),s[26]||(s[26]=i("tr",null,[i("td",{style:{"text-align":"left"}},'endsWith("col", "val")'),i("td",{style:{"text-align":"left"}},"like '%val'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされる")])],-1)),s[27]||(s[27]=i("tr",null,[i("td",{style:{"text-align":"left"}},'contains("col", "val")'),i("td",{style:{"text-align":"left"}},"like '%val%'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされる")])],-1)),s[28]||(s[28]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notLike("col", "%val%")'),i("td",{style:{"text-align":"left"}},"not like '%val%'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされない")])],-1)),s[29]||(s[29]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notStartsWith("col", "val")'),i("td",{style:{"text-align":"left"}},"not like 'val%'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされる")])],-1)),s[30]||(s[30]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notEndsWith("col", "val")'),i("td",{style:{"text-align":"left"}},"not like '%val'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされる")])],-1)),s[31]||(s[31]=i("tr",null,[i("td",{style:{"text-align":"left"}},'notContains("col", "val")'),i("td",{style:{"text-align":"left"}},"not like '%val%'"),i("td",{style:{"text-align":"left"}},[i("code",null,"val"),a("はエスケープされる")])],-1)),s[32]||(s[32]=i("tr",null,[i("td",{style:{"text-align":"left"}},'between("col", 1, 2)'),i("td",{style:{"text-align":"left"}},"col between 1 and 2"),i("td",{style:{"text-align":"left"}})],-1)),i("tr",null,[i("td",g,[s[5]||(s[5]=a('notBetween("col", 1, 2) ')),t(n,{text:"0.23.0+"})]),s[6]||(s[6]=i("td",{style:{"text-align":"left"}},"col not between 1 and 2",-1)),s[7]||(s[7]=i("td",{style:{"text-align":"left"}},null,-1))]),i("tr",null,[i("td",o,[s[8]||(s[8]=a('betweenColumns(2, "col1", "col2") ')),t(n,{text:"0.23.0+"})]),s[9]||(s[9]=i("td",{style:{"text-align":"left"}},"2 between col1 and col2",-1)),s[10]||(s[10]=i("td",{style:{"text-align":"left"}},null,-1))]),i("tr",null,[i("td",y,[s[11]||(s[11]=a('notBetweenColumns(2, "col1", "col2") ')),t(n,{text:"0.23.0+"})]),s[12]||(s[12]=i("td",{style:{"text-align":"left"}},"2 not between col1 and col2",-1)),s[13]||(s[13]=i("td",{style:{"text-align":"left"}},null,-1))]),s[33]||(s[33]=i("tr",null,[i("td",{style:{"text-align":"left"}},'isNull("col")'),i("td",{style:{"text-align":"left"}},"col is null"),i("td",{style:{"text-align":"left"}})],-1)),s[34]||(s[34]=i("tr",null,[i("td",{style:{"text-align":"left"}},'isNotNull("col")'),i("td",{style:{"text-align":"left"}},"col is not null"),i("td",{style:{"text-align":"left"}})],-1)),s[35]||(s[35]=i("tr",null,[i("td",{style:{"text-align":"left"}},'where("col = 1 or col = 2")'),i("td",{style:{"text-align":"left"}},"(col = 1 or col = 2)"),i("td",{style:{"text-align":"left"}},[a("もし複数回"),i("code",null,"where()"),a("が呼び出された場合は条件を "),i("code",null,"AND"),a(" で結合する")])],-1)),s[36]||(s[36]=i("tr",null,[i("td",{style:{"text-align":"left"}},'where("col = /*col1*/", "col1", 1)'),i("td",{style:{"text-align":"left"}},"(col = 1/*col1*/)"),i("td",{style:{"text-align":"left"}},"パラメータの指定（1件）付き")],-1)),s[37]||(s[37]=i("tr",null,[i("td",{style:{"text-align":"left"}},'where("col = /*col1*/ or col = /*col2*/", Map.of("col1", 1, "col2", 2))'),i("td",{style:{"text-align":"left"}},"(col = 1/*col1*/ or col = 2/*col2*/)"),i("td",{style:{"text-align":"left"}},"パラメータの指定（複数件）付き")],-1))])]),s[182]||(s[182]=l(`<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// emp_no = 1 のレコードをList&lt;Employee&gt;で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// emp_no = 10 又は 20 のレコードをList&lt;Employee&gt;で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// first_name like &#39;%Bob%&#39; のレコードをList&lt;Employee&gt;で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;first_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// where句を直接記述(first_name = &#39;Bob&#39; and last_name = &#39;Smith&#39;)した結果をList&lt;Employee&gt;で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;first_name =&#39;&#39;/*firstName*/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firstName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;last_name = &#39;&#39;/*lastName*/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lastName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Smith&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>同じカラムに対して <code>where</code> 以外の抽出条件指定メソッドを複数指定した場合、最後に指定した抽出条件が有効になります。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">greaterThan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lessEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上記の場合、 <code>lessEqual</code> メソッドの指定が有効になり、以下のSQLが発行されます。<br> （<code>greaterThan</code> メソッドの指定は無視されます）</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  emp_no      </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emp_no</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, first_name  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> first_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, last_name   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employee</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  emp_no </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="danger custom-block"><p class="custom-block-title">警告</p><p><code>SqlEntityQuery</code>に対して抽出条件を指定する場合<code>param</code>メソッドは使用しないでください。 <code>SqlEntityQuery#param()</code>には<code>@Deprecated</code>が付与されており、将来削除される予定です。</p></div>`,3)),i("h3",u,[s[39]||(s[39]=l("ソート順(<code>SqlEntityQuery#asc</code> /<code>#desc</code>)や取得データの件数(<code>#limit</code>)、開始位置(<code>#offset</code>)、悲観ロック(<code>#forUpdate</code> /<code>#forUpdateNoWait</code> /<code>#forUpdateWait</code>)の指定 ",15)),t(n,{text:"0.11.0+"}),s[40]||(s[40]=a()),s[41]||(s[41]=i("a",{class:"header-anchor",href:"#ソート順-sqlentityquery-asc-desc-や取得データの件数-limit-、開始位置-offset-、悲観ロック-forupdate-forupdatenowait-forupdatewait-の指定","aria-label":'Permalink to "ソート順(`SqlEntityQuery#asc` /`#desc`)や取得データの件数(`#limit`)、開始位置(`#offset`)、悲観ロック(`#forUpdate` /`#forUpdateNoWait` /`#forUpdateWait`)の指定 <Badge text="0.11.0+"/>"'},"​",-1))]),s[183]||(s[183]=i("p",null,[i("code",null,"SqlEntityQuery"),a("では抽出条件に加えて検索結果のソート順や取得件数の制限、開始位置の指定、明示的なロック指定が行えます。")],-1)),i("table",b,[s[60]||(s[60]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"条件指定メソッド記述例"),i("th",{style:{"text-align":"left"}},"生成されるSQL"),i("th",{style:{"text-align":"left"}},"補足説明")])],-1)),i("tbody",null,[s[54]||(s[54]=i("tr",null,[i("td",{style:{"text-align":"left"}},'asc("col1", "col2")'),i("td",{style:{"text-align":"left"}},"order by col1 asc, col2 asc"),i("td",{style:{"text-align":"left"}},[i("code",null,"NULLS"),a("が有効な場合は"),i("code",null,"NULLS LAST"),a("が出力される")])],-1)),s[55]||(s[55]=i("tr",null,[i("td",{style:{"text-align":"left"}},'asc("col1", Nulls.FIRST)'),i("td",{style:{"text-align":"left"}},"order by col1 asc NULLS FIRST"),i("td",{style:{"text-align":"left"}},[a("複数回"),i("code",null,"asc()"),a("が呼び出された場合は呼び出し順に並べる")])],-1)),s[56]||(s[56]=i("tr",null,[i("td",{style:{"text-align":"left"}},'desc("col1", "col2")'),i("td",{style:{"text-align":"left"}},"order by col1 desc, col2 desc"),i("td",{style:{"text-align":"left"}},[i("code",null,"NULLS"),a("が有効な場合は"),i("code",null,"NULLS LAST"),a("が出力される")])],-1)),s[57]||(s[57]=i("tr",null,[i("td",{style:{"text-align":"left"}},'desc("col1", Nulls.FIRST)'),i("td",{style:{"text-align":"left"}},"order by col1 desc NULLS FIRST"),i("td",{style:{"text-align":"left"}},[a("複数回"),i("code",null,"asc()"),a("が呼び出された場合は呼び出し順に並べる")])],-1)),s[58]||(s[58]=i("tr",null,[i("td",{style:{"text-align":"left"}},"limit(10)"),i("td",{style:{"text-align":"left"}},"LIMIT 10"),i("td",{style:{"text-align":"left"}},[a("接続しているDBで"),i("code",null,"limit"),a("句が使用できない場合は"),i("code",null,"UroborosqlRuntimeException"),a("がスローされる")])],-1)),s[59]||(s[59]=i("tr",null,[i("td",{style:{"text-align":"left"}},"offset(10)"),i("td",{style:{"text-align":"left"}},"OFFSET 10"),i("td",{style:{"text-align":"left"}},[a("接続しているDBで"),i("code",null,"offset"),a("句が使用できない場合は"),i("code",null,"UroborosqlRuntimeException"),a("がスローされる")])],-1)),i("tr",null,[i("td",c,[s[42]||(s[42]=a("forUpdate()")),t(n,{text:"0.14.0+",vertical:"middle"})]),s[43]||(s[43]=i("td",{style:{"text-align":"left"}},"FOR UPDATE",-1)),s[44]||(s[44]=i("td",{style:{"text-align":"left"}},[a("接続しているDBで"),i("code",null,"FOR UPDATE"),a("句が使用できない場合は"),i("code",null,"UroborosqlRuntimeException"),a("がスローされる")],-1))]),i("tr",null,[i("td",m,[s[45]||(s[45]=a("forUpdateNoWait()")),t(n,{text:"0.14.0+",vertical:"middle"})]),s[46]||(s[46]=i("td",{style:{"text-align":"left"}},"FOR UPDATE NOWAIT",-1)),s[47]||(s[47]=i("td",{style:{"text-align":"left"}},[a("接続しているDBで"),i("code",null,"FOR UPDATE NOWAIT"),a("句が使用できない場合は"),i("code",null,"UroborosqlRuntimeException"),a("がスローされる")],-1))]),i("tr",null,[i("td",F,[s[48]||(s[48]=a("forUpdateWait()")),t(n,{text:"0.14.0+",vertical:"middle"})]),s[49]||(s[49]=i("td",{style:{"text-align":"left"}},"FOR UPDATE WAIT 10",-1)),s[50]||(s[50]=i("td",{style:{"text-align":"left"}},[a("接続しているDBで"),i("code",null,"FOR UPDATE WAIT"),a("句が使用できない場合は"),i("code",null,"UroborosqlRuntimeException"),a("がスローされる")],-1))]),i("tr",null,[i("td",A,[s[51]||(s[51]=a("forUpdateWait(30)")),t(n,{text:"0.14.0+",vertical:"middle"})]),s[52]||(s[52]=i("td",{style:{"text-align":"left"}},"FOR UPDATE WAIT 30",-1)),s[53]||(s[53]=i("td",{style:{"text-align":"left"}},[a("接続しているDBで"),i("code",null,"FOR UPDATE WAIT"),a("句が使用できない場合は"),i("code",null,"UroborosqlRuntimeException"),a("がスローされる")],-1))])])]),s[184]||(s[184]=l(`<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// birth_dateの降順、first_nameの昇順でソートした結果を List&lt;Employee&gt;で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;birth_date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;first_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// emp_no の昇順でソートした結果の3行目から5件取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 明示的な行ロックを行う</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,1)),i("h3",C,[s[61]||(s[61]=a("オプティマイザーヒントの指定(")),s[62]||(s[62]=i("code",null,"SqlEntityQuery#hint",-1)),s[63]||(s[63]=a(") ")),t(n,{text:"0.18.0+"}),s[64]||(s[64]=a()),s[65]||(s[65]=i("a",{class:"header-anchor",href:"#オプティマイザーヒントの指定-sqlentityquery-hint","aria-label":'Permalink to "オプティマイザーヒントの指定(`SqlEntityQuery#hint`) <Badge text="0.18.0+"/>"'},"​",-1))]),s[185]||(s[185]=l('<p><code>SqlEntityQuery#hint()</code>を使用することで、SQLに対してオプティマイザーヒントを指定することができます。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SqlAgent agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(User.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ORDERED&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lessThan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>出力されるSQL(Oracleの場合)</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /*+ ORDERED */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, age, ... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>オプティマイザーヒントの指定は、利用するDBがオプティマイザーヒントをサポートしている場合に有効になります。<br> また、指定可能なヒント句は利用するDBに依存します。</p></div><h3 id="検索結果の取得-sqlentityquery-collect-first-one-select-stream" tabindex="-1">検索結果の取得(<code>SqlEntityQuery#collect</code> /<code>#first</code> /<code>#one</code> /<code>#select</code> /<code>#stream</code>) <a class="header-anchor" href="#検索結果の取得-sqlentityquery-collect-first-one-select-stream" aria-label="Permalink to &quot;検索結果の取得(`SqlEntityQuery#collect` /`#first` /`#one` /`#select` /`#stream`)&quot;">​</a></h3><p><code>SqlEntityQuery</code>から抽出条件に該当するエンティティを取得します。</p>',7)),i("table",x,[s[72]||(s[72]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"メソッド"),i("th",{style:{"text-align":"left"}},"説明")])],-1)),i("tbody",null,[s[68]||(s[68]=i("tr",null,[i("td",{style:{"text-align":"left"}},"collect()"),i("td",{style:{"text-align":"left"}},"検索結果をエンティティのリストとして取得する")],-1)),s[69]||(s[69]=i("tr",null,[i("td",{style:{"text-align":"left"}},"first()"),i("td",{style:{"text-align":"left"}},"検索結果の先頭行を取得する")],-1)),s[70]||(s[70]=i("tr",null,[i("td",{style:{"text-align":"left"}},"one()"),i("td",{style:{"text-align":"left"}},[a("検索結果の先頭行を取得する。検索結果が2件以上の場合"),i("code",null,"DataNonUniqueException"),a("をスローする")])],-1)),i("tr",null,[i("td",f,[s[66]||(s[66]=a("Stream<C> select(String col, Class<C> type) ")),t(n,{text:"0.18.0+"})]),s[67]||(s[67]=i("td",{style:{"text-align":"left"}},[a("検索結果の指定したカラムの値を"),i("code",null,"java.util.stream.Stream"),a("として取得する。")],-1))]),s[71]||(s[71]=i("tr",null,[i("td",{style:{"text-align":"left"}},"stream()"),i("td",{style:{"text-align":"left"}},[a("検索結果を"),i("code",null,"java.util.stream.Stream"),a("として取得する")])],-1))])]),s[186]||(s[186]=l(`<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// List&lt;Employee&gt;で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 検索結果の先頭行を取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Optional&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 検索結果（カラム値）の取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String employeeName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;employeeId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;employeeName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">orElseThrow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,1)),i("h3",D,[s[73]||(s[73]=a("取得するカラム/除外するカラムの指定(")),s[74]||(s[74]=i("code",null,"#includeColumns",-1)),s[75]||(s[75]=a(" / ")),s[76]||(s[76]=i("code",null,"#excludeColumns",-1)),s[77]||(s[77]=a(") ")),t(n,{text:"0.23.0+"}),s[78]||(s[78]=a()),s[79]||(s[79]=i("a",{class:"header-anchor",href:"#取得するカラム-除外するカラムの指定-includecolumns-excludecolumns","aria-label":'Permalink to "取得するカラム/除外するカラムの指定(`#includeColumns` / `#excludeColumns`) <Badge text="0.23.0+"/>"'},"​",-1))]),s[187]||(s[187]=l(`<p><a href="#検索結果の取得-sqlentityquery-collect-first-one-select-stream">検索結果の取得</a> を呼び出す前に検索結果に含めるカラムを指定することで 利用しないカラムに対する不要なアクセスを減らすことができます。</p><table tabindex="0"><thead><tr><th style="text-align:left;">メソッド</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:left;">includeColumns(String... cols)</td><td style="text-align:left;">検索結果に含めるカラム名を指定する（複数指定可）</td></tr><tr><td style="text-align:left;">excludeColumns(String... cols)</td><td style="text-align:left;">検索結果から除外するカラム名を指定する（複数指定可）</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// List&lt;Employee&gt;を取得 (取得したEmployeeインスタンスにはemployeeIdのみ設定されている)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includeColumns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;employeeId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// List&lt;Employee&gt;を取得 (取得したEmployeeインスタンスにはemployeeName以外が設定されている)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">excludeColumns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;employeeName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,3)),i("h3",v,[s[80]||(s[80]=l("集約関数(<code>SqlEntityQuery#count</code> /<code>#sum</code> /<code>#sum</code> /<code>#min</code> /<code>#max</code> /<code>#exists</code> /<code>#notExists</code>) ",15)),t(n,{text:"0.12.0+"}),s[81]||(s[81]=a()),s[82]||(s[82]=i("a",{class:"header-anchor",href:"#集約関数-sqlentityquery-count-sum-sum-min-max-exists-notexists","aria-label":'Permalink to "集約関数(`SqlEntityQuery#count` /`#sum` /`#sum` /`#min` /`#max` /`#exists` /`#notExists`) <Badge text="0.12.0+"/>"'},"​",-1))]),s[188]||(s[188]=l(`<p><code>SqlEntityQuery</code>ではエンティティを取得する他に結果の集計を行うこともできます。</p><table tabindex="0"><thead><tr><th style="text-align:left;">メソッド</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:left;">count()</td><td style="text-align:left;">検索結果の件数を取得する</td></tr><tr><td style="text-align:left;">count(String col)</td><td style="text-align:left;">検索結果のうち、引数で指定したカラムがNULLでない行の件数を取得する</td></tr><tr><td style="text-align:left;">sum(String col)</td><td style="text-align:left;">検索結果のうち、引数で指定したカラムの合計値を取得する</td></tr><tr><td style="text-align:left;">min(String col)</td><td style="text-align:left;">検索結果のうち、引数で指定したカラムの最小値を取得する</td></tr><tr><td style="text-align:left;">max(String col)</td><td style="text-align:left;">検索結果のうち、引数で指定したカラムの最大値を取得する</td></tr><tr><td style="text-align:left;">exists(Runnable runnable)</td><td style="text-align:left;">検索結果が1件以上ある場合に引数で渡した関数を実行する</td></tr><tr><td style="text-align:left;">notExists(Runnable runnable)</td><td style="text-align:left;">検索結果が0件の場合に引数で渡した関数を実行する</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 検索結果の件数を取得</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 検索結果が1件以上の場合にログを出力する</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">greaterThan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Employee(emp_no &gt; 10) exists.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>集約関数を使用すると、検索結果からEntityオブジェクトを生成しないためメモリ効率が良くなります。 以下２つの処理結果は同じですが、メモリの使い方が違います。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// collect()を使用すると、検索結果がエンティティに変換されるためメモリを使用する</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// count()を使用すると件数のみ取得できる（エンティティは生成されない）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h2 id="エンティティの挿入" tabindex="-1">エンティティの挿入 <a class="header-anchor" href="#エンティティの挿入" aria-label="Permalink to &quot;エンティティの挿入&quot;">​</a></h2><h3 id="_1件の挿入-sqlagent-insert-insertandreturn" tabindex="-1">1件の挿入(<code>SqlAgent#insert</code>/<code>#insertAndReturn</code>) <a class="header-anchor" href="#_1件の挿入-sqlagent-insert-insertandreturn" aria-label="Permalink to &quot;1件の挿入(\`SqlAgent#insert\`/\`#insertAndReturn\`)&quot;">​</a></h3>`,6)),i("table",q,[s[86]||(s[86]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"メソッド名"),i("th",{style:{"text-align":"left"}},"戻り値の型")])],-1)),i("tbody",null,[s[85]||(s[85]=i("tr",null,[i("td",{style:{"text-align":"left"}},"<E> SqlAgent#insert(E)"),i("td",{style:{"text-align":"left"}},"int")],-1)),i("tr",null,[i("td",B,[s[83]||(s[83]=a("<E> SqlAgent#insertAndReturn(E) ")),t(n,{text:"0.15.0+"})]),s[84]||(s[84]=i("td",{style:{"text-align":"left"}},"E",-1))])])]),s[189]||(s[189]=l(`<p>エンティティクラスのインスタンスを使って１レコードの挿入を行います。</p><ul><li><a href="#id-generatedvalue-sequencegenerator">@Id</a>アノテーションの指定があるフィールド</li><li>対するカラムが自動採番となっているフィールド</li></ul><p>上記の型がprimitive型の場合、もしくはフィールドの値が<code>null</code>の場合、カラムの値は挿入時に自動採番されます。<br> また、挿入により採番された値がエンティティの該当フィールドにも設定されます。<br> フィールドに値を指定した場合は自動採番カラムであっても指定した値が挿入されます。</p><p>デフォルト値の指定があるカラムに対するフィールドが <code>null</code> の場合、カラムの値にデフォルト値が設定されます。</p><p>NULL可であるカラムに対するフィールドの値が <code>null</code> の場合、そのカラムに値は設定されず、結果として <code>NULL</code> になるか、またはデフォルト値が設定されます。<br> NULL可であるカラムに対するフィールドの型が <code>Optional</code>型の場合、<code>Optional.empty()</code> が設定されていればそのカラムには <code>NULL</code> が設定されます。<code>Optional.empty()</code> 以外の値が設定されていれば、Optionalが内包する値が設定されます。</p><p><code>AndReturn</code>が付くメソッドでは、挿入したエンティティオブジェクトを戻り値として取得できるため、 エンティティの挿入に続けて処理を行う場合に便利です。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Employee employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Susan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLastName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Davis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBirthDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LocalDate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1969</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Optional.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;susan.davis@sample.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// email カラムには susan.davis@sample.com が設定される</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setGender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Gender.FEMALE); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MALE(&quot;M&quot;), FEMALE(&quot;F&quot;), OTHER(&quot;O&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1件の挿入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自動採番された値が出力される</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,7)),i("h3",S,[s[87]||(s[87]=a("複数件の挿入(")),s[88]||(s[88]=i("code",null,"SqlAgent#inserts",-1)),s[89]||(s[89]=a(" /")),s[90]||(s[90]=i("code",null,"#insertsAndReturn",-1)),s[91]||(s[91]=a(") ")),t(n,{text:"0.10.0+"}),s[92]||(s[92]=a()),s[93]||(s[93]=i("a",{class:"header-anchor",href:"#複数件の挿入-sqlagent-inserts-insertsandreturn","aria-label":'Permalink to "複数件の挿入(`SqlAgent#inserts` /`#insertsAndReturn`) <Badge text="0.10.0+"/>"'},"​",-1))]),i("table",T,[s[118]||(s[118]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"メソッド名"),i("th",{style:{"text-align":"left"}},"戻り値の型")])],-1)),i("tbody",null,[s[110]||(s[110]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Stream<E>)"),i("td",{style:{"text-align":"left"}},"int")],-1)),s[111]||(s[111]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Stream<E>, InsertsType)"),i("td",{style:{"text-align":"left"}},"int")],-1)),s[112]||(s[112]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Stream<E>, InsertsCondition<? super E>)"),i("td",{style:{"text-align":"left"}},"int")],-1)),s[113]||(s[113]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Stream<E>, InsertsCondition<? super E>, InsertsType)"),i("td",{style:{"text-align":"left"}},"int")],-1)),i("tr",null,[i("td",I,[s[94]||(s[94]=a("SqlAgent#insertsAndReturn(Stream<E>) ")),t(n,{text:"0.15.0+"})]),s[95]||(s[95]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),i("tr",null,[i("td",N,[s[96]||(s[96]=a("SqlAgent#insertsAndReturn(Stream<E>, InsertsType) ")),t(n,{text:"0.15.0+"})]),s[97]||(s[97]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),i("tr",null,[i("td",P,[s[98]||(s[98]=a("SqlAgent#insertsAndReturn(Stream<E>, InsertsCondition<? super E>) ")),t(n,{text:"0.15.0+"})]),s[99]||(s[99]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),i("tr",null,[i("td",L,[s[100]||(s[100]=a("SqlAgent#insertsAndReturn(Stream<E>, InsertsCondition<? super E>, InsertsType) ")),t(n,{text:"0.15.0+"})]),s[101]||(s[101]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),s[114]||(s[114]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Class<E>, Stream<E>)"),i("td",{style:{"text-align":"left"}},"int")],-1)),s[115]||(s[115]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Class<E>, Stream<E>, InsertsType)"),i("td",{style:{"text-align":"left"}},"int")],-1)),s[116]||(s[116]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Class<E>, Stream<E>, InsertsCondition<? super E>)"),i("td",{style:{"text-align":"left"}},"int")],-1)),s[117]||(s[117]=i("tr",null,[i("td",{style:{"text-align":"left"}},"SqlAgent#inserts(Class<E>, Stream<E>, InsertsCondition<? super E>, InsertsType)"),i("td",{style:{"text-align":"left"}},"int")],-1)),i("tr",null,[i("td",R,[s[102]||(s[102]=a("SqlAgent#insertsAndReturn(Class<E>, Stream<E>) ")),t(n,{text:"0.15.0+"})]),s[103]||(s[103]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),i("tr",null,[i("td",w,[s[104]||(s[104]=a("SqlAgent#insertsAndReturn(Class<E>, Stream<E>, InsertsType) ")),t(n,{text:"0.15.0+"})]),s[105]||(s[105]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),i("tr",null,[i("td",j,[s[106]||(s[106]=a("SqlAgent#insertsAndReturn(Class<E>, Stream<E>, InsertsCondition<? super E>) ")),t(n,{text:"0.15.0+"})]),s[107]||(s[107]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))]),i("tr",null,[i("td",V,[s[108]||(s[108]=a("SqlAgent#insertsAndReturn(Class<E>, Stream<E>, InsertsCondition<? super E>, InsertsType) ")),t(n,{text:"0.15.0+"})]),s[109]||(s[109]=i("td",{style:{"text-align":"left"}},"Stream<E>",-1))])])]),s[190]||(s[190]=l(`<p><code>java.util.stream.Stream</code>経由で渡される複数のエンティティインスタンスを挿入します。</p><ul><li><a href="#id-generatedvalue-sequencegenerator">@Id</a>アノテーションの指定があるフィールド</li><li>対するカラムが自動採番となっているフィールド</li></ul><p>の型がprimitive型の場合、もしくはフィールドの値が<code>null</code>の場合、カラムの値は挿入時に自動採番されます。<br> また、挿入により採番された値がエンティティの該当フィールドにも設定されます。<br> フィールドに値を指定した場合は自動採番カラムであっても指定した値が挿入されます。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>複数件の挿入で生成されるSQLでは、行毎のフィールドの値の有無を変更することができません。<br> 最初に挿入するエンティティで<code>@Id</code>の指定があるフィールドや自動採番カラムに対するフィールドに値を設定する場合は、 2件目以降のエンティティにも必ず値を設定するようにしてください。<br> また、最初に挿入するエンティティで<code>@Id</code>の指定があるフィールドや自動採番カラムに対するフィールドの値に<code>null</code>を設定する場合は、 2件目以降のエンティティで値を設定していても無視されて自動採番されます。</p></div><p><code>AndReturn</code>が付くメソッドでは、挿入したエンティティオブジェクトの<code>java.util.stream.Stream</code>を戻り値として取得できるため、 エンティティの挿入に続けて処理を行う場合に便利です。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p><code>AndReturn</code>の戻り値となる<code>Stream&lt;E&gt;</code>を生成する際、挿入したエンティティを全件メモリ上に保持します。 大量データの挿入を行うとOOMEが発生する場合があるので、<code>insertsAndReturn</code>を使用する場合は挿入する データの件数に気をつけてください。件数が多い場合は一度<code>inserts</code>で挿入した後に、再度検索するといった方法を検討してください。</p></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1件の挿入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Department dept </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Department</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dept.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDeptName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sales&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dept);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 複数件の挿入(EmployeeとDeptEmpの挿入)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inserts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertsAndReturn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DepEmp deptEmp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeptEmp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    deptEmp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    deptEmp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDepNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dept.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDepNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deptEmp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="挿入方法-insertstype-の指定" tabindex="-1">挿入方法（InsertsType）の指定 <a class="header-anchor" href="#挿入方法-insertstype-の指定" aria-label="Permalink to &quot;挿入方法（InsertsType）の指定&quot;">​</a></h3><p><code>InsertsType</code>を指定することで実行される挿入用のSQLを変更することが出来ます。</p><table tabindex="0"><thead><tr><th style="text-align:left;">InsertsType</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:left;">BATCH</td><td style="text-align:left;"><code>java.sql.PreparedStatement#executeBatch()</code>を使用したバッチSQL実行</td></tr><tr><td style="text-align:left;">BULK</td><td style="text-align:left;"><code>insert into ... values ( ... ), ( ... )</code>という風にvaluesに複数行の値を出力し一度に複数レコードを挿入する。<br>DBがこの記法をサポートしている場合に指定可能。DBが未サポートの場合、指定しても<code>BATCH</code>として実行される。</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Stream&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 複数件の挿入(バッチ実行)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inserts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employees, InsertsType.BATCH);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>InsertsType</code>は、<a href="./../configuration/sql-agent-factory.html#複数件挿入時の挿入方法の初期値設定">初期値設定</a>が可能です。</p></div><div class="warning custom-block"><p class="custom-block-title">BATCH と BULK の選択について</p><p>一般的に少ないレコード数を挿入する場合は <code>BULK</code> を指定する方が早くなります。（DBの種類やJDBCドライバーの実装、割り当てられたメモリにより差異はあります）<br> これは、 <code>BULK</code> の動作が以下のように2段階の動作であるのに対し、</p><ol><li>SQLをpreparedStatementに変換</li><li>SQL発行</li></ol><p><code>BATCH</code> の動作が以下のような動作になっているためです。</p><ol><li>SQLをpreparedStatementに変換</li><li><a href="#挿入条件-insertscondition-の指定">挿入条件</a>で指定した条件になるまで蓄積したデータをDBに送信</li><li>SQL発行</li><li>挿入するデータが無くなるまで2～3の繰り返し</li></ol><p>しかし<code>BULK</code> で発行するSQLは挿入する件数に比例して肥大化し、それに伴い 1. の preparedStatement への変換に時間がかかるようになります。<br> それに比べて <code>BATCH</code> では挿入する件数が増えても <code>BULK</code> に比べて処理時間の増加が緩やかなので、挿入する件数が増えると <code>BATCH</code> のほうが高速になります。<br><code>BULK</code> を指定する場合は実際に挿入にかかる時間を計測し、<code>BATCH</code> より早いことを確認してください。</p></div><h3 id="挿入条件-insertscondition-の指定" tabindex="-1">挿入条件（InsertsCondition）の指定 <a class="header-anchor" href="#挿入条件-insertscondition-の指定" aria-label="Permalink to &quot;挿入条件（InsertsCondition）の指定&quot;">​</a></h3><p>挿入用SQLの実行条件を指定します。<br><code>InsertsCondition&lt;E&gt;#test(SqlContext ctx, int count, E entity)</code>の戻り値が<code>true</code>の場合に挿入用SQLを実行します。<br><code>InsertsCondition</code>はFunctionalInterfaceのためlambda式が利用できます。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Stream&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEmpNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 複数件の挿入（10件毎に挿入）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inserts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employees, (ctx, count, entity) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="エンティティの更新" tabindex="-1">エンティティの更新 <a class="header-anchor" href="#エンティティの更新" aria-label="Permalink to &quot;エンティティの更新&quot;">​</a></h2><h3 id="_1件の更新-sqlagent-update-updateandreturn" tabindex="-1">1件の更新(<code>SqlAgent#update</code> /<code>#updateAndReturn</code>) <a class="header-anchor" href="#_1件の更新-sqlagent-update-updateandreturn" aria-label="Permalink to &quot;1件の更新(\`SqlAgent#update\` /\`#updateAndReturn\`)&quot;">​</a></h3>`,18)),i("table",U,[s[122]||(s[122]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"メソッド名"),i("th",{style:{"text-align":"left"}},"戻り値の型")])],-1)),i("tbody",null,[s[121]||(s[121]=i("tr",null,[i("td",{style:{"text-align":"left"}},"<E> SqlAgent#update(E)"),i("td",{style:{"text-align":"left"}},"int")],-1)),i("tr",null,[i("td",_,[s[119]||(s[119]=a("<E> SqlAgent#updateAndReturn(E) ")),t(n,{text:"0.15.0+"})]),s[120]||(s[120]=i("td",{style:{"text-align":"left"}},"E",-1))])])]),s[191]||(s[191]=l(`<p>エンティティクラスのインスタンスを使って１レコードの更新を行います。</p><p>レコード更新時、<a href="#version">@Version</a>アノテーションの指定があるフィールドに対するカラムはカウントアップされます。<br> また、更新された値がエンティティの該当フィールドにも設定されます。</p><p>NULL可であるカラムに対するフィールドの値が <code>null</code> の場合、そのカラムは <strong>更新されません</strong>。<br> NULL可であるカラムに対するフィールドの型が <code>Optional</code>型の場合、<code>Optional.empty()</code> が設定されていればそのカラムは <code>NULL</code> で更新されます。 <code>Optional.empty()</code> 以外の値が設定されていれば、Optionalが内包する値で更新されます。</p><div class="warning custom-block"><p class="custom-block-title">補足</p><p>エンティティクラスのインスタンスを使った１レコードの更新では、<code>@Id</code>を指定したフィールドに対するカラムや自動採番カラムは更新できません。<br><code>@Id</code>を指定したフィールドに対するカラムや自動採番カラムを更新する場合は、後述する<a href="#条件指定による複数件の更新-sqlagent-update">条件指定による複数件の更新</a>を使用してください。</p></div><p><code>AndReturn</code>が付くメソッドでは、更新したエンティティオブジェクトを戻り値として取得できるため、 エンティティの更新に続けて処理を行う場合に便利です。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifPresent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLastName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Wilson&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Optional.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// email を null に更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLockVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // エンティティの更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLockVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,6)),i("h3",O,[s[123]||(s[123]=a("条件指定による複数件の更新(")),s[124]||(s[124]=i("code",null,"SqlAgent#update",-1)),s[125]||(s[125]=a(") ")),t(n,{text:"0.15.0+"}),s[126]||(s[126]=a()),s[127]||(s[127]=i("a",{class:"header-anchor",href:"#条件指定による複数件の更新-sqlagent-update","aria-label":'Permalink to "条件指定による複数件の更新(`SqlAgent#update`) <Badge text="0.15.0+"/>"'},"​",-1))]),s[192]||(s[192]=l(`<table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#update(Class&lt;? extends E&gt;)</td><td style="text-align:left;">SqlEntityUpdate&lt;E&gt;</td></tr></tbody></table><p>更新対象のレコードを抽出する条件を指定して更新を行います。<br> 抽出条件の指定方法は <a href="#抽出条件の指定">抽出条件の指定</a> を参照してください。<br> また、<code>set()</code>メソッドで更新対象のフィールドと値を指定することができます。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// first_name に &#39;Bob&#39; を含むエンティティの性別を更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firstName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gender&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Gender.MALE)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,3)),i("h3",Q,[s[128]||(s[128]=a("複数件の更新(")),s[129]||(s[129]=i("code",null,"SqlAgent#updates",-1)),s[130]||(s[130]=a(" /")),s[131]||(s[131]=i("code",null,"#updatesAndReturn",-1)),s[132]||(s[132]=a(") ")),t(n,{text:"0.15.0+"}),s[133]||(s[133]=a()),s[134]||(s[134]=i("a",{class:"header-anchor",href:"#複数件の更新-sqlagent-updates-updatesandreturn","aria-label":'Permalink to "複数件の更新(`SqlAgent#updates` /`#updatesAndReturn`) <Badge text="0.15.0+"/>"'},"​",-1))]),s[193]||(s[193]=l(`<table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#updates(Stream&lt;E&gt;)</td><td style="text-align:left;">int</td></tr><tr><td style="text-align:left;">SqlAgent#updates(Stream&lt;E&gt;, UpdatesCondition&lt;? super E&gt;)</td><td style="text-align:left;">int</td></tr><tr><td style="text-align:left;">SqlAgent#updatesAndReturn(Stream&lt;E&gt;)</td><td style="text-align:left;">Stream&lt;E&gt;</td></tr><tr><td style="text-align:left;">SqlAgent#updatesAndReturn(Stream&lt;E&gt;, UpdatesCondition&lt;? super E&gt;)</td><td style="text-align:left;">Stream&lt;E&gt;</td></tr><tr><td style="text-align:left;">SqlAgent#updates(Class&lt;E&gt;, Stream&lt;E&gt;)</td><td style="text-align:left;">int</td></tr><tr><td style="text-align:left;">SqlAgent#updates(Class&lt;E&gt;, Stream&lt;E&gt;, UpdatesCondition&lt;? super E&gt;)</td><td style="text-align:left;">int</td></tr><tr><td style="text-align:left;">SqlAgent#updatesAndReturn(Class&lt;E&gt;, Stream&lt;E&gt;)</td><td style="text-align:left;">Stream&lt;E&gt;</td></tr><tr><td style="text-align:left;">SqlAgent#updatesAndReturn(Class&lt;E&gt;, Stream&lt;E&gt;, UpdatesCondition&lt;? super E&gt;)</td><td style="text-align:left;">Stream&lt;E&gt;</td></tr></tbody></table><p><code>java.util.stream.Stream</code>経由で渡される複数のエンティティインスタンスを使って更新します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>inserts</code>と違い必ずバッチSQL実行になります。</p></div><p>レコード更新時、<a href="#version">@Version</a>アノテーションの指定があるフィールドに対するカラムはカウントアップされます。<br> また、更新された値がエンティティの該当フィールドにも設定されます。</p><p><code>AndReturn</code>が付くメソッドでは、更新したエンティティオブジェクトの<code>java.util.stream.Stream</code>を戻り値として取得できるため、 エンティティの更新に続けて処理を行う場合に便利です。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>AndReturn</code>の戻り値となる<code>Stream&lt;E&gt;</code>を生成する際、更新したエンティティを全件メモリ上に保持します。 大量データの更新を行うとOOMEが発生する場合があるので、<code>updatesAndReturn</code>を使用する場合は更新する データの件数に気をつけてください。件数が多い場合は一度<code>updates</code>で更新した後に、再度検索するといった方法を検討してください。</p></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 複数件の更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;_new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="更新条件-updatescondition-の指定" tabindex="-1">更新条件（UpdatesCondition）の指定 <a class="header-anchor" href="#更新条件-updatescondition-の指定" aria-label="Permalink to &quot;更新条件（UpdatesCondition）の指定&quot;">​</a></h3><p>更新用SQLの実行条件を指定します。<br><code>UpdatesCondition&lt;E&gt;#test(SqlContext ctx, int count, E entity)</code>の戻り値が<code>true</code>の場合に更新用SQLを実行します。<br><code>UpdatesCondition</code>はFunctionalInterfaceのためlambda式が利用できます。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Stream&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;_new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 複数件の更新（10件毎に挿入）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employees, (ctx, count, entity) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,10)),i("h2",W,[s[135]||(s[135]=a("エンティティのマージ ")),t(n,{text:"0.22.0+"}),s[136]||(s[136]=a()),s[137]||(s[137]=i("a",{class:"header-anchor",href:"#エンティティのマージ","aria-label":'Permalink to "エンティティのマージ <Badge text="0.22.0+"/>"'},"​",-1))]),s[194]||(s[194]=l(`<h3 id="_1件のマージ-sqlagent-merge-mergeandreturn" tabindex="-1">1件のマージ(<code>SqlAgent#merge</code> /<code>#mergeAndReturn</code>) <a class="header-anchor" href="#_1件のマージ-sqlagent-merge-mergeandreturn" aria-label="Permalink to &quot;1件のマージ(\`SqlAgent#merge\` /\`#mergeAndReturn\`)&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">&lt;E&gt; SqlAgent#merge(E)</td><td style="text-align:left;">int</td></tr><tr><td style="text-align:left;">&lt;E&gt; SqlAgent#mergeAndReturn(E)</td><td style="text-align:left;">E</td></tr><tr><td style="text-align:left;">&lt;E&gt; SqlAgent#mergeWithLocking(E)</td><td style="text-align:left;">int</td></tr><tr><td style="text-align:left;">&lt;E&gt; SqlAgent#mergeWithLockingAndReturn(E)</td><td style="text-align:left;">E</td></tr></tbody></table><p>エンティティクラスのインスタンスを使ってPKによるレコードの検索を行い、レコードがある場合は更新を行います。<br> レコードがない場合、もしくは引数で指定したインスタンスのPKに該当するフィールドに値の指定が無い場合は挿入を行います。<br> （これは通常、<code>UPSERT</code> や <code>MERGE</code> と呼ばれる動作です）</p><p><code>AndReturn</code> が付くメソッドでは、更新、または挿入したエンティティオブジェクトを戻り値として取得できるため、 エンティティの更新や挿入に続けて処理を行う場合に便利です。</p><p><code>WithLocking</code> が付くメソッドでは、PKによるレコードの検索時、レコードの悲観ロックも合わせて行います。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>接続しているDBが <code>SELECT FOR UPDATE</code> もしくは <code>SELECT FOR UPDATE NOWAIT</code> をサポートしていない場合、<code>WithLocking</code> が付くメソッドを呼び出すと <code>UroborosqlRuntimeException</code> がスローされます。</p></div><h4 id="mergeメソッドを使用しない場合" tabindex="-1">mergeメソッドを使用しない場合 <a class="header-anchor" href="#mergeメソッドを使用しない場合" aria-label="Permalink to &quot;mergeメソッドを使用しない場合&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifPresentOrElse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLastName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Wilson&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // エンティティの更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Employee employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Susan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLastName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Wilson&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBirthDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LocalDate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1969</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setGender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Gender.FEMALE); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MALE(&quot;M&quot;), FEMALE(&quot;F&quot;), OTHER(&quot;O&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // エンティティの挿入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="mergeメソッドを利用する場合-更新" tabindex="-1">mergeメソッドを利用する場合（更新） <a class="header-anchor" href="#mergeメソッドを利用する場合-更新" aria-label="Permalink to &quot;mergeメソッドを利用する場合（更新）&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Employee employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// find or create instance.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// employee.setId(1);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // id(PK) is 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLastName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Wilson&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="mergeメソッドを利用する場合-挿入" tabindex="-1">mergeメソッドを利用する場合（挿入） <a class="header-anchor" href="#mergeメソッドを利用する場合-挿入" aria-label="Permalink to &quot;mergeメソッドを利用する場合（挿入）&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Employee employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFirstName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Susan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLastName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Wilson&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBirthDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LocalDate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1969</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">employee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setGender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Gender.FEMALE); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MALE(&quot;M&quot;), FEMALE(&quot;F&quot;), OTHER(&quot;O&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="エンティティの削除" tabindex="-1">エンティティの削除 <a class="header-anchor" href="#エンティティの削除" aria-label="Permalink to &quot;エンティティの削除&quot;">​</a></h2><h3 id="_1件の削除-sqlagent-delete-deleteandreturn" tabindex="-1">1件の削除(<code>SqlAgent#delete</code> /<code>#deleteAndReturn</code>) <a class="header-anchor" href="#_1件の削除-sqlagent-delete-deleteandreturn" aria-label="Permalink to &quot;1件の削除(\`SqlAgent#delete\` /\`#deleteAndReturn\`)&quot;">​</a></h3>`,14)),i("table",G,[s[141]||(s[141]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"メソッド名"),i("th",{style:{"text-align":"left"}},"戻り値の型")])],-1)),i("tbody",null,[s[140]||(s[140]=i("tr",null,[i("td",{style:{"text-align":"left"}},"<E> SqlAgent#delete(E)"),i("td",{style:{"text-align":"left"}},"int")],-1)),i("tr",null,[i("td",M,[s[138]||(s[138]=a("<E> SqlAgent#deleteAndReturn(E) ")),t(n,{text:"0.15.0+"})]),s[139]||(s[139]=i("td",{style:{"text-align":"left"}},"E",-1))])])]),s[195]||(s[195]=l(`<p>エンティティクラスのインスタンスを使って１レコードの削除を行います。</p><p><code>AndReturn</code>が付くメソッドでは、削除したエンティティオブジェクトを戻り値として取得できるため、 エンティティの削除に続けて処理を行う場合に便利です。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifPresent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // エンティティの削除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employee);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,3)),i("h3",K,[s[142]||(s[142]=a("PKを指定した複数件の削除(")),s[143]||(s[143]=i("code",null,"SqlAgent#delete",-1)),s[144]||(s[144]=a(") ")),t(n,{text:"0.11.0+"}),s[145]||(s[145]=a()),s[146]||(s[146]=i("a",{class:"header-anchor",href:"#pkを指定した複数件の削除-sqlagent-delete","aria-label":'Permalink to "PKを指定した複数件の削除(`SqlAgent#delete`) <Badge text="0.11.0+"/>"'},"​",-1))]),s[196]||(s[196]=l(`<table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#delete(Class&lt;? extends E&gt;, Object...)</td><td style="text-align:left;">int</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// PK(emp_no) = 1 or 2 のエンティティの削除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,2)),i("h3",H,[s[147]||(s[147]=a("条件指定による複数件の削除(")),s[148]||(s[148]=i("code",null,"SqlAgent#delete",-1)),s[149]||(s[149]=a(") ")),t(n,{text:"0.11.0+"}),s[150]||(s[150]=a()),s[151]||(s[151]=i("a",{class:"header-anchor",href:"#条件指定による複数件の削除-sqlagent-delete","aria-label":'Permalink to "条件指定による複数件の削除(`SqlAgent#delete`) <Badge text="0.11.0+"/>"'},"​",-1))]),s[197]||(s[197]=l(`<table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#delete(Class&lt;? extends E&gt;)</td><td style="text-align:left;">SqlEntityDelete&lt;E&gt;</td></tr></tbody></table><p>削除対象のレコードを抽出する条件を指定して削除を行います。<br> 抽出条件の指定方法は <a href="#抽出条件の指定">抽出条件の指定</a> を参照してください。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// first_name = &#39;Bob&#39; に該当するエンティティの削除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firstName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3)),i("h3",J,[s[152]||(s[152]=a("全ての行を削除（")),s[153]||(s[153]=i("code",null,"SqlAgent#truncate",-1)),s[154]||(s[154]=a("） ")),t(n,{text:"0.17.0+"}),s[155]||(s[155]=a()),s[156]||(s[156]=i("a",{class:"header-anchor",href:"#全ての行を削除-sqlagent-truncate","aria-label":'Permalink to "全ての行を削除（`SqlAgent#truncate`） <Badge text="0.17.0+"/>"'},"​",-1))]),s[198]||(s[198]=l(`<table tabindex="0"><thead><tr><th style="text-align:left;">メソッド名</th><th style="text-align:left;">戻り値の型</th></tr></thead><tbody><tr><td style="text-align:left;">SqlAgent#truncate(Class&lt;? extends E&gt;)</td><td style="text-align:left;">SqlAgent</td></tr></tbody></table><p>エンティティクラスとマッピングされているテーブルの全てのレコードを<code>TRUNCATE</code>文により削除します。 一般的に大量レコードの削除は、<code>TRUNCATE</code>文による削除のほうが性能上有利ですが、DBMSによってはロールバックできませんので、注意してください。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>PostgreSQLは、<code>TRUNCATE</code>文のロールバック可能です。</p></div><p><code>SqlAgent#truncate</code>は、<code>SqlAgent</code>を戻り値として返すため、<code>SqlAgent#truncate</code>に続けて、<code>SqlAgent#inserts</code>をつなげることにより、 テーブルの洗い替えを実装することが可能です。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全てのレコードを削除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// テーブルの洗い替え</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inserts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(employees.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,5)),i("div",$,[s[164]||(s[164]=l(`<p class="custom-block-title">DAOインタフェースで生成されるSQL</p><p>DAOインタフェースを使ってテーブルにアクセスする場合、生成されるSQLは以下のようにスキーマ名で修飾したテーブル名が出力されます。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>出力されるSQL</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  emp_no        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emp_no</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, first_name    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> first_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, last_name     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, birth_date    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> birth_date</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gender        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gender</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, email         </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lock_version  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lock_version</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PUBLIC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">employee</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  -- 接続しているスキーマが PUBLIC の場合</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emp_no </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /*empNo*/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,5)),i("p",null,[s[157]||(s[157]=a("postgresqlで複数のスキーマにまたがるテーブル群にアクセスする為に")),s[158]||(s[158]=i("code",null,"search_path",-1)),s[159]||(s[159]=a("オプションでスキーマを複数指定するようなケースでは、修飾されたスキーマ名が期待するスキーマと一致せずテーブルにアクセスできない場合があります。")),s[160]||(s[160]=i("br",null,null,-1)),s[161]||(s[161]=a(" このようなケースでは、システムプロパティ ")),s[162]||(s[162]=i("code",null,"uroborosql.use.qualified.table.name",-1)),s[163]||(s[163]=a(" を指定することで出力されるSQLからスキーマ名を除くことができます。")),t(n,{text:"0.25.1+",vertical:"middle"})]),s[165]||(s[165]=l(`<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// uroborosql.use.qualified.table.name システムプロパティに false を指定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uroborosql.use.qualified.table.name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SqlConfig config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UroboroSQL.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jdbc:h2:mem:uroborosql&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (SqlAgent agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Employee.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>出力されるSQL</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  emp_no        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emp_no</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, first_name    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> first_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, last_name     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> last_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, birth_date    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> birth_date</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gender        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gender</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, email         </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lock_version  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lock_version</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employee  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- テーブル名のみの出力となる</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emp_no </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /*empNo*/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>uroborosql で指定できるシステムプロパティについては <a href="./../advanced/#システムプロパティ">システムプロパティ</a> を参照してください</p>`,4))]),s[199]||(s[199]=l(`<h2 id="entityアノテーション" tabindex="-1">Entityアノテーション <a class="header-anchor" href="#entityアノテーション" aria-label="Permalink to &quot;Entityアノテーション&quot;">​</a></h2><p>DAOインタフェースで利用するエンティティクラスではテーブルとのマッピングやカラムの属性を指定するためにアノテーションを利用することができます。</p><h3 id="table" tabindex="-1"><code>@Table</code> <a class="header-anchor" href="#table" aria-label="Permalink to &quot;\`@Table\`&quot;">​</a></h3><p>エンティティクラスに紐づけるテーブル名を指定します。<br> テーブル名と名前が一致しないエンティティクラスにマッピングしたい場合に利用します。</p><table tabindex="0"><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">型</th><th style="text-align:center;">必須</th><th style="text-align:left;">説明</th><th style="text-align:left;">初期値</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">マッピングするテーブル名。指定しない場合はクラス名をスネークケースにしたテーブルとマッピングする</td><td style="text-align:left;">なし</td></tr><tr><td style="text-align:left;">schema</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">マッピングするテーブルの所属するスキーマ名</td><td style="text-align:left;">なし</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Table;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// name指定なし (departmentテーブルにマッピング)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Department</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// name指定あり</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;employee&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomEmployee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="column" tabindex="-1"><code>@Column</code> <a class="header-anchor" href="#column" aria-label="Permalink to &quot;\`@Column\`&quot;">​</a></h3><p>フィールドに紐づけるカラム名を指定します。<br> カラム名と名前が一致しないフィールドにマッピングしたい場合に利用します。</p><table tabindex="0"><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">型</th><th style="text-align:center;">必須</th><th style="text-align:left;">説明</th><th style="text-align:left;">初期値</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">String</td><td style="text-align:center;">〇</td><td style="text-align:left;">マッピングするカラム名</td><td style="text-align:left;">なし</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Column;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;employee&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;emp_no&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employeeNo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String firstName;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="domain" tabindex="-1"><code>@Domain</code> <a class="header-anchor" href="#domain" aria-label="Permalink to &quot;\`@Domain\`&quot;">​</a></h3><p>独自に作成した型(ドメインクラス)やEnumのフィールドにカラムをマッピングする場合に指定します。</p><table tabindex="0"><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">型</th><th style="text-align:center;">必須</th><th style="text-align:left;">説明</th><th style="text-align:left;">初期値</th></tr></thead><tbody><tr><td style="text-align:left;">valueType</td><td style="text-align:left;">Class&lt;?&gt;</td><td style="text-align:center;">〇</td><td style="text-align:left;">ドメインクラスを生成するのに必要な値の型</td><td style="text-align:left;">なし</td></tr><tr><td style="text-align:left;">factoryMethod</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">ドメインクラスを生成・取得するメソッド名。指定しない場合はコンストラクタが呼び出される。</td><td style="text-align:left;">&quot;&quot;</td></tr><tr><td style="text-align:left;">toJdbcMethod</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">JDBCが受け付けられる値に変換するメソッド名</td><td style="text-align:left;">&quot;getValue&quot;</td></tr><tr><td style="text-align:left;">nullable</td><td style="text-align:left;">boolean</td><td style="text-align:center;">-</td><td style="text-align:left;">null可かどうかの指定</td><td style="text-align:left;">false</td></tr></tbody></table><p>例</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Domain;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">valueType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String.class, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">factoryMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;of&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toJdbcMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;getName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NameDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NameDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NameDomain </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NameDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> empNo;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NameDomain firstName;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="transient" tabindex="-1"><code>@Transient</code> <a class="header-anchor" href="#transient" aria-label="Permalink to &quot;\`@Transient\`&quot;">​</a></h3><p>フィールドとカラムのマッピング対象から除外します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>例えば、エンタープライズシステムの設計でしばしば利用される最終登録日時や最終更新日時など、 INSERT/UPDATEの対象から除外したいケースで利用します。</p></div><table tabindex="0"><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">型</th><th style="text-align:center;">必須</th><th style="text-align:left;">説明</th><th style="text-align:left;">初期値</th></tr></thead><tbody><tr><td style="text-align:left;">insert</td><td style="text-align:left;">boolean</td><td style="text-align:center;">-</td><td style="text-align:left;"><code>agent#insert()</code>実行時にフィールドを無視するかどうか。<code>true</code>の場合は無視する。</td><td style="text-align:left;">true</td></tr><tr><td style="text-align:left;">update</td><td style="text-align:left;">boolean</td><td style="text-align:center;">-</td><td style="text-align:left;"><code>agent#update()</code>実行時にフィールドを無視するかどうか。<code>true</code>の場合は無視する。</td><td style="text-align:left;">true</td></tr></tbody></table><p>例</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Transient;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 途中略</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Transient</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String memo; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 常に無視</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Transient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LocalDate creationDate; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// insert時は対象、update時は無視</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Transient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LocalDate updateDate;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// insert時は無視、update時は対象</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="version" tabindex="-1"><code>@Version</code> <a class="header-anchor" href="#version" aria-label="Permalink to &quot;\`@Version\`&quot;">​</a></h3><p>このアノテーションが付与されたフィールドは楽観ロック用のバージョン情報を保持するフィールドになります。<br> デフォルト(<code>LockVersionOptimisticLockSupplier</code>)ではUPDATE時にはSET句で+1され、WHERE句の検索条件に追加されてSQLを実行し更新件数が0の場合には<code>OptimisticLockException</code>をスローします。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>@Version</code>を付与するフィールドにマッピングされるDBカラムの型は数値型でなければなりません。</p></div>`,24)),i("table",Y,[s[171]||(s[171]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"属性名"),i("th",{style:{"text-align":"left"}},"型"),i("th",{style:{"text-align":"center"}},"必須"),i("th",{style:{"text-align":"left"}},"説明"),i("th",{style:{"text-align":"left"}},"初期値")])],-1)),i("tbody",null,[i("tr",null,[i("td",z,[s[166]||(s[166]=a("supplier")),t(n,{text:"0.17.0+"})]),s[167]||(s[167]=i("td",{style:{"text-align":"left"}},"OptimisticLockSupplier",-1)),s[168]||(s[168]=i("td",{style:{"text-align":"center"}},"-",-1)),s[169]||(s[169]=i("td",{style:{"text-align":"left"}},"バージョン情報カラム",-1)),s[170]||(s[170]=i("td",{style:{"text-align":"left"}},"LockVersionOptimisticLockSupplier",-1))])])]),s[200]||(s[200]=l(`<h4 id="サプライヤの種類" tabindex="-1">サプライヤの種類 <a class="header-anchor" href="#サプライヤの種類" aria-label="Permalink to &quot;サプライヤの種類&quot;">​</a></h4><table tabindex="0"><thead><tr><th>サプライヤ型</th><th>概要</th><th>説明</th></tr></thead><tbody><tr><td>LockVersionOptimisticLockSupplier</td><td>ロックバージョン</td><td>UPDATEのSET句で<code>+1</code>がセットされます。</td></tr><tr><td>CyclicLockVersionOptimisticLockSupplier</td><td>循環式ロックバージョン</td><td>UPDATEのSET句で<code>バージョン情報カラム名 % 数値カラムの最大値 + 1</code>がセットされます。</td></tr><tr><td>TimestampOptimisticLockSupplier</td><td>タイムスタンプ</td><td>UPDATEのSET句でタイムスタンプ(<code>System.currentTimeMillis()</code>)がセットされます。</td></tr><tr><td>FieldIncrementOptimisticLockSupplier</td><td>フィールド値インクリメント</td><td>UPDATEのSET句で2WaySQLのバインド変数を利用して、<code>バージョン情報カラム名＋1</code>がセットされます。</td></tr></tbody></table><p>例</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Version;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.TimestampOptimisticLockSupplier;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> empNo;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String firstName;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String lastName;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">　　// 途中略</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">supplier</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TimestampOptimisticLockSupplier.class)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lockVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,4)),i("h3",X,[s[172]||(s[172]=i("code",null,"@Id",-1)),s[173]||(s[173]=a(" /")),s[174]||(s[174]=i("code",null,"@GeneratedValue",-1)),s[175]||(s[175]=a(" /")),s[176]||(s[176]=i("code",null,"@SequenceGenerator",-1)),s[177]||(s[177]=a()),t(n,{text:"0.12.0+"}),s[178]||(s[178]=a()),s[179]||(s[179]=i("a",{class:"header-anchor",href:"#id-generatedvalue-sequencegenerator","aria-label":'Permalink to "`@Id` /`@GeneratedValue` /`@SequenceGenerator` <Badge text="0.12.0+"/>"'},"​",-1))]),s[201]||(s[201]=l(`<p>これらのアノテーションが付与されたフィールドは自動採番フィールドになります。<br><code>@Id</code>と<code>@GeneratedValue</code>は必ずセットでフィールドに付与する必要があります。<br><code>@GeneratedValue</code>のstrategy属性が<code>GenerationType.SEQUENCE</code>の場合に<code>@SequenceGenerator</code>を付与してシーケンスの生成方法を指定する必要があります。<br> １つのエンティティに属する複数のフィールドを自動採番フィールドとして指定することも可能です。</p><table tabindex="0"><thead><tr><th style="text-align:left;">アノテーション</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:left;">@Id</td><td style="text-align:left;">エンティティの自動採番フィールドを識別するアノテーション</td></tr><tr><td style="text-align:left;">@GeneratedValue</td><td style="text-align:left;">自動採番フィールドの値の生成戦略を指定するアノテーション</td></tr><tr><td style="text-align:left;">@SequenceGenerator</td><td style="text-align:left;">ID生成に使用するSEQUENCEの情報を設定するアノテーション</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:left;">アノテーション</th><th style="text-align:left;">属性名</th><th style="text-align:left;">型</th><th style="text-align:center;">必須</th><th style="text-align:left;">説明</th><th style="text-align:left;">初期値</th></tr></thead><tbody><tr><td style="text-align:left;">@Id</td><td style="text-align:left;">なし</td><td style="text-align:left;">-</td><td style="text-align:center;">-</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">@GeneratedValue</td><td style="text-align:left;">strategy</td><td style="text-align:left;">GenerationType</td><td style="text-align:center;">-</td><td style="text-align:left;">ID生成戦略の型。<code>GenerationType.IDENTITY</code>, <code>GenerationType.SEQUENCE</code>のいずれかを指定</td><td style="text-align:left;">GenerationType.IDENTITY</td></tr><tr><td style="text-align:left;">@SequenceGenerator</td><td style="text-align:left;">sequence</td><td style="text-align:left;">String</td><td style="text-align:center;">〇</td><td style="text-align:left;">シーケンス名</td><td style="text-align:left;">なし</td></tr><tr><td style="text-align:left;">@SequenceGenerator</td><td style="text-align:left;">catalog</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">シーケンスが所属するカタログ名</td><td style="text-align:left;">&quot;&quot;</td></tr><tr><td style="text-align:left;">@SequenceGenerator</td><td style="text-align:left;">schema</td><td style="text-align:left;">String</td><td style="text-align:center;">-</td><td style="text-align:left;">シーケンスが所属するスキーマ名</td><td style="text-align:left;">&quot;&quot;</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Table;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.Id;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.GeneratedValue;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jp.co.future.uroborosql.mapping.annotations.SequenceGenerator;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Table</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Employee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GeneratedValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GenerationType.IDENTITY)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> empId;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GeneratedValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GenerationType.SEQUENCE)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SequenceGenerator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sequence</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;employee_emp_detail_id_seq&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> empDetailId;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String firstName;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 以下略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,4))])}const ps=e(r,[["render",Z]]);export{es as __pageData,ps as default};
