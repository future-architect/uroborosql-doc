import{_ as a,c as s,o as i,a2 as t}from"./chunks/framework.DYH4TpTR.js";const d=JSON.parse('{"title":"開発者ガイド","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"開発者ガイド"}],["meta",{"name":"og:url","content":"/uroborosql-doc/developer_guide/"}]]},"headers":[],"relativePath":"developer_guide/index.md","filePath":"developer_guide/index.md"}'),r={name:"developer_guide/index.md"};function n(l,e,o,h,p,c){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="開発者ガイド" tabindex="-1">開発者ガイド <a class="header-anchor" href="#開発者ガイド" aria-label="Permalink to &quot;開発者ガイド&quot;">​</a></h1><p>uroboroSQLを開発する人向けのガイドです</p><h2 id="ソースコードの取得" tabindex="-1">ソースコードの取得 <a class="header-anchor" href="#ソースコードの取得" aria-label="Permalink to &quot;ソースコードの取得&quot;">​</a></h2><p><a href="https://github.com/future-architect/uroborosql" target="_blank" rel="noreferrer">GitHub</a>からソースをクローンする。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/future-architect/uroborosql.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="ソースのビルド" tabindex="-1">ソースのビルド <a class="header-anchor" href="#ソースのビルド" aria-label="Permalink to &quot;ソースのビルド&quot;">​</a></h2><p>ビルドには<a href="https://maven.apache.org/" target="_blank" rel="noreferrer">Apache Maven</a>を利用します。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="テスト" tabindex="-1">テスト <a class="header-anchor" href="#テスト" aria-label="Permalink to &quot;テスト&quot;">​</a></h2><p>テストは<a href="http://junit.org/junit4/" target="_blank" rel="noreferrer">JUnit</a>で行います。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>カバレッジは<a href="http://www.eclemma.org/jacoco/" target="_blank" rel="noreferrer">Jacoco</a>で確認することができます。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jacoco:report</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>target/site/jacoco フォルダにjacocoカバレッジレポートが出力されます。</p><p>開発を行う際は、Jadocコメントが正しく記載されているようにしてください。<br> javadocプラグインでjavadocを生成し、エラーが出力されないことを確認してください。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> javadoc:javadoc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="mavenローカルリポジトリへのインストール" tabindex="-1">Mavenローカルリポジトリへのインストール <a class="header-anchor" href="#mavenローカルリポジトリへのインストール" aria-label="Permalink to &quot;Mavenローカルリポジトリへのインストール&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="ide" tabindex="-1">IDE <a class="header-anchor" href="#ide" aria-label="Permalink to &quot;IDE&quot;">​</a></h2><h3 id="eclipse" tabindex="-1">Eclipse <a class="header-anchor" href="#eclipse" aria-label="Permalink to &quot;Eclipse&quot;">​</a></h3><p>クローンしたフォルダをEclipseの既存Mavenプロジェクトとしてインポートしてください。<br> MavenのinitializeフェーズでEclipseプロジェクトの文字コードをUTF-8にする設定が入っているので、インポートが完了すれば開発が始められる状態になります。</p><h3 id="intellij" tabindex="-1">Intellij <a class="header-anchor" href="#intellij" aria-label="Permalink to &quot;Intellij&quot;">​</a></h3><p>Import Project でクローンしたフォルダを指定してください。<br> Import project from external model でMavenを選択してください。<br> プロジェクトが読み込まれると開発が始められる状態になります。</p><h2 id="continuous-integration" tabindex="-1">Continuous Integration <a class="header-anchor" href="#continuous-integration" aria-label="Permalink to &quot;Continuous Integration&quot;">​</a></h2><p>Continuous Integration(CI)は<a href="https://travis-ci.org/future-architect/uroborosql" target="_blank" rel="noreferrer">Travis CI</a>で行っています。</p><p>CIの状況確認は以下で行います。</p><ul><li><a href="https://travis-ci.org/future-architect/uroborosql" target="_blank" rel="noreferrer">https://travis-ci.org/future-architect/uroborosql</a></li></ul><p>また、CIと合わせてカバレッジレポートを<a href="https://coveralls.io/github/future-architect/uroborosql" target="_blank" rel="noreferrer">Coveralls</a>で公開しています。</p><ul><li><a href="https://coveralls.io/github/future-architect/uroborosql" target="_blank" rel="noreferrer">https://coveralls.io/github/future-architect/uroborosql</a></li></ul><h2 id="issue-management" tabindex="-1">Issue Management <a class="header-anchor" href="#issue-management" aria-label="Permalink to &quot;Issue Management&quot;">​</a></h2><p>IssueとPullRequestはGithubの機能を利用しています。<br> コメントは英語で記載をお願いします。（Google翻訳がお勧めです）</p><ul><li><a href="https://github.com/future-architect/uroborosql/issues" target="_blank" rel="noreferrer">https://github.com/future-architect/uroborosql/issues</a></li><li><a href="https://github.com/future-architect/uroborosql/pulls" target="_blank" rel="noreferrer">https://github.com/future-architect/uroborosql/pulls</a></li></ul>',32)]))}const b=a(r,[["render",n]]);export{d as __pageData,b as default};
