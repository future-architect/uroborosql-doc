import{_ as e,C as l,c as p,o as r,a2 as n,j as t,a as i,G as h}from"./chunks/framework.DYH4TpTR.js";const C=JSON.parse('{"title":"ConnectionSupplier","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"ConnectionSupplier"}],["meta",{"name":"og:url","content":"/uroborosql-doc/configuration/connection-supplier.html"}]]},"headers":[],"relativePath":"configuration/connection-supplier.md","filePath":"configuration/connection-supplier.md"}'),o={name:"configuration/connection-supplier.md"},k={id:"connectioncontext",tabindex:"-1"};function d(c,s,E,g,u,y){const a=l("Badge");return r(),p("div",null,[s[3]||(s[3]=n('<h1 id="connectionsupplier" tabindex="-1">ConnectionSupplier <a class="header-anchor" href="#connectionsupplier" aria-label="Permalink to &quot;ConnectionSupplier&quot;">​</a></h1><p>DB接続を行う際のコネクションを提供するクラスです。 標準で以下のクラスが提供されているので用途に応じて使い分けてください。</p><table tabindex="0"><thead><tr><th style="text-align:left;">クラス名</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:left;">DefaultConnectionSupplierImpl</td><td style="text-align:left;">コンストラクタで受け取ったコネクションを返すだけのコネクション供給クラス</td></tr><tr><td style="text-align:left;">JdbcConnectionSupplierImpl</td><td style="text-align:left;">JDBCドライバーマネージャを使用したコネクション提供クラス</td></tr><tr><td style="text-align:left;">DataSourceConnectionSupplierImpl</td><td style="text-align:left;">データソースを使用したコネクション提供クラス</td></tr></tbody></table><p>また、<a href="https://github.com/future-architect/uroborosql/blob/main/src/main/java/jp/co/future/uroborosql/connection/ConnectionSupplier.java" target="_blank" rel="noreferrer">ConnectionSupplier</a>インタフェースを実装した独自のJDBCコネクション提供クラスを利用することもできます。</p>',4)),t("h2",k,[s[0]||(s[0]=i("ConnectionContext ")),h(a,{text:"0.19.0+"}),s[1]||(s[1]=i()),s[2]||(s[2]=t("a",{class:"header-anchor",href:"#connectioncontext","aria-label":'Permalink to "ConnectionContext <Badge text="0.19.0+"/>"'},"​",-1))]),s[4]||(s[4]=n(`<p>動的に<code>SqlAgent</code>の接続先を切り替える場合は、<code>SqlConfig#agent(ConnectionContext)</code>メソッドを使用します。</p><p><code>ConnectionContext</code>は、<code>ConnectionContextBuilder</code>の下記メソッドを利用して、インスタンスを生成します。</p><table tabindex="0"><thead><tr><th style="text-align:left;">戻り値</th><th style="text-align:left;">メソッド名</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:left;">DataSourceConnectionContext</td><td style="text-align:left;">dataSource()</td><td style="text-align:left;">DataSourceConnectionContext を生成する.</td></tr><tr><td style="text-align:left;">DataSourceConnectionContext</td><td style="text-align:left;">dataSource(String dataSourceName)</td><td style="text-align:left;">DataSourceConnectionContext を生成する.</td></tr><tr><td style="text-align:left;">JdbcConnectionContext</td><td style="text-align:left;">jdbc(String url)</td><td style="text-align:left;">JdbcConnectionContext を生成する.</td></tr><tr><td style="text-align:left;">JdbcConnectionContext</td><td style="text-align:left;">jdbc(String url, String user, String password)</td><td style="text-align:left;">JdbcConnectionContext を生成する.</td></tr><tr><td style="text-align:left;">JdbcConnectionContext</td><td style="text-align:left;">jdbc(String url, String user, String password, String schema)</td><td style="text-align:left;">JdbcConnectionContext を生成する.</td></tr></tbody></table><h3 id="実装例" tabindex="-1">実装例 <a class="header-anchor" href="#実装例" aria-label="Permalink to &quot;実装例&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SqlConfig config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UroboroSQL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setConnectionSupplier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JdbcConnectionSupplier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jdbc:h2:mem:mainConnection&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (SqlAgent agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // using jdbc:h2:mem:mainConnection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//-------------------------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (SqlAgent agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ConnectionContextBuilder</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jdbc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jdbc:h2:mem:subConnection&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // usingjdbc:h2:mem:subConnection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,5))])}const m=e(o,[["render",d]]);export{C as __pageData,m as default};
