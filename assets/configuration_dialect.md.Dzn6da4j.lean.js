import{_ as n,C as r,c as o,o as d,a2 as i,j as t,a as l,G as s}from"./chunks/framework.DYH4TpTR.js";const S=JSON.parse('{"title":"Dialect","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Dialect"}],["meta",{"name":"og:url","content":"/uroborosql-doc/configuration/dialect.html"}]]},"headers":[],"relativePath":"configuration/dialect.md","filePath":"configuration/dialect.md"}'),p={name:"configuration/dialect.md"},g={tabindex:"0"},u={style:{"text-align":"left"}},c={style:{"text-align":"left"}},b={style:{"text-align":"left"}},f={style:{"text-align":"left"}};function y(k,e,h,x,m,D){const a=r("Badge");return d(),o("div",null,[e[32]||(e[32]=i("",11)),t("table",g,[e[31]||(e[31]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"メソッド名"),t("th",{style:{"text-align":"left"}},"戻り値"),t("th",{style:{"text-align":"left"}},"説明")])],-1)),t("tbody",null,[e[12]||(e[12]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsBulkInsert()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},[t("code",null,"BULK INSERT"),l("をサポートするかどうか")])],-1)),e[13]||(e[13]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsLimitClause()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},[t("code",null,"LIMIT"),l("句をサポートするかどうか")])],-1)),t("tr",null,[t("td",u,[e[0]||(e[0]=l("supportsOptimizerHints() ")),s(a,{text:"0.18.0+"})]),e[1]||(e[1]=t("td",{style:{"text-align":"left"}},"boolean",-1)),e[2]||(e[2]=t("td",{style:{"text-align":"left"}},"オプティマイザーヒントをサポートするかどうか",-1))]),e[14]||(e[14]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsNullValuesOrdering()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT"),l("句の"),t("code",null,"ORDER BY"),l("でNULL値の順序を指定できるか（NULLS FIRST/LAST）")])],-1)),e[15]||(e[15]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsIdentity()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},"データベースのIDカラムを使用したID自動採番をサポートしているか")],-1)),e[16]||(e[16]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsSequence()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},"データベースのシーケンスを使用したID自動採番をサポートしているか")],-1)),e[17]||(e[17]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsForUpdate()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},"明示的な行ロックをサポートしているか")],-1)),e[18]||(e[18]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsForUpdateNoWait()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},"明示的な行ロック（待機なし）をサポートしているか")],-1)),e[19]||(e[19]=t("tr",null,[t("td",{style:{"text-align":"left"}},"supportsForUpdateWait()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},"明示的な行ロック（待機あり）をサポートしているか")],-1)),e[20]||(e[20]=t("tr",null,[t("td",{style:{"text-align":"left"}},"isRemoveTerminator()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},[l("実行するSQLに記述されている終端文字("),t("code",null,";"),l(")を削除するかどうか")])],-1)),e[21]||(e[21]=t("tr",null,[t("td",{style:{"text-align":"left"}},"isRollbackToSavepointBeforeRetry()"),t("td",{style:{"text-align":"left"}},"boolean"),t("td",{style:{"text-align":"left"}},"リトライする前に設定したSavepointまでロールバックするかどうか")],-1)),e[22]||(e[22]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getSequenceNextValSql(String sequenceName)"),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},"シーケンスを取得するためのSQL文を取得する")],-1)),e[23]||(e[23]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getLimitClause(long limit, long offset)"),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},[t("code",null,"LIMIT"),l("句（と"),t("code",null,"OFFSET"),l("句）を取得する")])],-1)),e[24]||(e[24]=t("tr",null,[t("td",{style:{"text-align":"left"}},"escapeLikePattern(CharSequence pattern)"),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},[t("code",null,"LIKE"),l("演算子のパターン文字列をエスケープする")])],-1)),e[25]||(e[25]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getJavaType(JDBCType jdbcType, String jdbcTypeName)"),t("td",{style:{"text-align":"left"}},"JavaType"),t("td",{style:{"text-align":"left"}},"引数で渡ってきたJavaTypeを変換したJavaTypeを取得する。（DB固有のJava型変換を行う場合に実装）")],-1)),e[26]||(e[26]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getJavaType(int jdbcType, String jdbcTypeName)"),t("td",{style:{"text-align":"left"}},"JavaType"),t("td",{style:{"text-align":"left"}},"引数で渡ってきたJavaTypeを変換したJavaTypeを取得する。（DB固有のJava型変換を行う場合に実装）")],-1)),e[27]||(e[27]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getDatabaseName()"),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},"データベースを判別するための文字列を取得する")],-1)),e[28]||(e[28]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getDatabaseType()"),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},"データベースの種別を表す名前を取得する")],-1)),e[29]||(e[29]=t("tr",null,[t("td",{style:{"text-align":"left"}},"getEscapeChar()"),t("td",{style:{"text-align":"left"}},"char"),t("td",{style:{"text-align":"left"}},[t("code",null,"LIKE"),l("句で指定するエスケープキャラクタを取得する")])],-1)),e[30]||(e[30]=t("tr",null,[t("td",{style:{"text-align":"left"}},"addForUpdateClause(StringBuilder sql, ForUpdateType forUpdateType, int waitSeconds)"),t("td",{style:{"text-align":"left"}},"StringBuilder"),t("td",{style:{"text-align":"left"}},[t("code",null,"FOR UPDATE"),l("句の文字列をSQLに追加する")])],-1)),t("tr",null,[t("td",c,[e[3]||(e[3]=l("addOptimizerHints(StringBuilder sql, List<String> hints) ")),s(a,{text:"0.18.0+"})]),e[4]||(e[4]=t("td",{style:{"text-align":"left"}},"StringBuilder",-1)),e[5]||(e[5]=t("td",{style:{"text-align":"left"}},"引数で渡したSQLにオプティマイザーヒントを付与する",-1))]),t("tr",null,[t("td",b,[e[6]||(e[6]=l("getModLiteral(final String dividend, final String divisor) ")),s(a,{text:"0.17.0+"})]),e[7]||(e[7]=t("td",{style:{"text-align":"left"}},"StringBuilder",-1)),e[8]||(e[8]=t("td",{style:{"text-align":"left"}},"乗除を行うためのSQL文字列を取得する",-1))]),t("tr",null,[t("td",f,[e[9]||(e[9]=l("getPessimisticLockingErrorCodes() ")),s(a,{text:"0.18.2+"})]),e[10]||(e[10]=t("td",{style:{"text-align":"left"}},"Set<String>",-1)),e[11]||(e[11]=t("td",{style:{"text-align":"left"}},"悲観ロックのErrorCode もしくは SqlStateを取得する",-1))])])]),e[33]||(e[33]=i("",6))])}const E=n(p,[["render",y]]);export{S as __pageData,E as default};
