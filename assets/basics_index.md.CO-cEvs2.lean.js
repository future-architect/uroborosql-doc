import{_ as l,C as p,c as r,o as h,a2 as t,j as a,a as i,G as e}from"./chunks/framework.DYH4TpTR.js";const F=JSON.parse('{"title":"事前準備","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"事前準備"}],["meta",{"name":"og:url","content":"/uroborosql-doc/basics/"}]]},"headers":[],"relativePath":"basics/index.md","filePath":"basics/index.md"}'),k={name:"basics/index.md"},d={tabindex:"0"},o={style:{"text-align":"left"}},u={style:{"text-align":"left"}};function g(E,s,b,y,c,m){const n=p("Badge");return h(),r("div",null,[s[23]||(s[23]=t("",27)),a("table",d,[s[22]||(s[22]=a("thead",null,[a("tr",null,[a("th",{style:{"text-align":"left"}},"主なメソッド"),a("th",{style:{"text-align":"left"}},"説明")])],-1)),a("tbody",null,[s[14]||(s[14]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#param(String key, V value)"),a("td",{style:{"text-align":"left"}},"バインドパラメータや置換文字列として使用するキーと値のセットを設定する")],-1)),s[15]||(s[15]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#param(String key, V value, SQLType sqlType)"),a("td",{style:{"text-align":"left"}},"SQLTypeを指定して値を設定する")],-1)),s[16]||(s[16]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#param(String key, V value, int sqlType)"),a("td",{style:{"text-align":"left"}},"SQLTypeを表すint型を指定して値を設定する")],-1)),a("tr",null,[s[1]||(s[1]=a("td",{style:{"text-align":"left"}},"<V> SqlFluent#param(String key, Supplier<V> supplier)",-1)),a("td",o,[s[0]||(s[0]=i("supplierの評価結果をキーの値としてパラメータに設定する ")),e(n,{text:"0.10.1+"})])]),s[17]||(s[17]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#paramIfAbsent(String key, V value)"),a("td",{style:{"text-align":"left"}},"指定したキーがまだ登録されていない場合に値を設定する")],-1)),s[18]||(s[18]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#paramIfAbsent(String key, V value, SQLType sqlType)"),a("td",{style:{"text-align":"left"}},"指定したキーがまだ登録されていない場合にSQLTypeを指定して値を設定する")],-1)),s[19]||(s[19]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#paramIfAbsent(String key, V value, int sqlType)"),a("td",{style:{"text-align":"left"}},"指定したキーがまだ登録されていない場合にSQLTypeを表すint型を指定して値を設定する")],-1)),a("tr",null,[s[13]||(s[13]=a("td",{style:{"text-align":"left"}},[a("s",null,"<V> SqlFluent#paramList(String key, V... value)")],-1)),a("td",u,[s[2]||(s[2]=i("IN句のバインドパラメータに使用するキーと値のセットを設定する。")),s[3]||(s[3]=a("br",null,null,-1)),e(n,{text:"0.14.0+"}),s[4]||(s[4]=i(" から非推奨。かわりに")),s[5]||(s[5]=a("code",null,"param()",-1)),s[6]||(s[6]=i("に")),s[7]||(s[7]=a("code",null,"Arrays.asList()",-1)),s[8]||(s[8]=i("もしくは")),s[9]||(s[9]=a("code",null,"List.of()",-1)),s[10]||(s[10]=i("を使って")),s[11]||(s[11]=a("code",null,"List型",-1)),s[12]||(s[12]=i("に詰めて設定してください"))])]),s[20]||(s[20]=a("tr",null,[a("td",{style:{"text-align":"left"}},"SqlFluent#paramMap(Map<String, ?> paramMap)"),a("td",{style:{"text-align":"left"}},"引数のMapのKey/Valueのセットをパラメータに設定する")],-1)),s[21]||(s[21]=a("tr",null,[a("td",{style:{"text-align":"left"}},"<V> SqlFluent#paramBean(V bean)"),a("td",{style:{"text-align":"left"}},"引数として渡されたbeanのフィールド名と値のセットをパラメータに設定する")],-1))])]),s[24]||(s[24]=t("",2))])}const S=l(k,[["render",g]]);export{F as __pageData,S as default};
