(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{54:function(t,e,a){"use strict";a.r(e);var l=a(0),i=Object(l.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ognl式言語"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ognl式言語","aria-hidden":"true"}},[t._v("#")]),t._v(" OGNL式言語")]),t._v(" "),a("p",[a("strong",[t._v("uroboroSQL")]),t._v("では、条件分岐の式として"),a("a",{attrs:{href:"https://github.com/jkuhnert/ognl",target:"_blank",rel:"noopener noreferrer"}},[t._v("OGNL式言語"),a("OutboundLink")],1),t._v("を利用することができます。"),a("br"),t._v("\n条件分岐の評価式として使用する場合、評価結果が真偽値(true/false)になるように記述してください。")]),t._v(" "),a("p",[t._v("以下にOGNLの基本文法を提示します。\nOGNL文法の詳細は"),a("a",{attrs:{href:"https://commons.apache.org/proper/commons-ognl/language-guide.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("こちら"),a("OutboundLink")],1),t._v("を参照してください。")]),t._v(" "),a("h2",{attrs:{id:"リテラル"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#リテラル","aria-hidden":"true"}},[t._v("#")]),t._v(" リテラル")]),t._v(" "),a("p",[t._v("以下のリテラルが使用できます。")]),t._v(" "),a("ul",[a("li",[t._v("“a”(java.lang.String)")]),t._v(" "),a("li",[t._v("'a'(char)")]),t._v(" "),a("li",[t._v("1(int)")]),t._v(" "),a("li",[t._v("1L(long)")]),t._v(" "),a("li",[t._v("0.1F(float)")]),t._v(" "),a("li",[t._v("0.1D(double)")]),t._v(" "),a("li",[t._v("0.1B(java.math.BigDecimal)")]),t._v(" "),a("li",[t._v("1H(java.math.BigInteger)")]),t._v(" "),a("li",[t._v("true, false(Boolean)")]),t._v(" "),a("li",[t._v("null")])]),t._v(" "),a("h2",{attrs:{id:"演算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演算子","aria-hidden":"true"}},[t._v("#")]),t._v(" 演算子")]),t._v(" "),a("p",[t._v("以下の演算子が使用できます。")]),t._v(" "),a("h2",{attrs:{id:"算術演算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算術演算子","aria-hidden":"true"}},[t._v("#")]),t._v(" 算術演算子")]),t._v(" "),a("ul",[a("li",[t._v("e1 + e2(足し算)")]),t._v(" "),a("li",[t._v("e1 - e2 (引き算)")]),t._v(" "),a("li",[t._v("e1 * e2 (掛け算)")]),t._v(" "),a("li",[t._v("e1 / e2 (割り算)")]),t._v(" "),a("li",[t._v("e1 % e2 (余り)")])]),t._v(" "),a("h2",{attrs:{id:"比較演算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比較演算子","aria-hidden":"true"}},[t._v("#")]),t._v(" 比較演算子")]),t._v(" "),a("ul",[a("li",[t._v("e1 eq e2, e1 == e2 (等しい)\n"),a("ul",[a("li",[t._v("e1・e2のいずれかがnullの場合、両方ともnullの時のみe1とe2は等しい")]),t._v(" "),a("li",[t._v("e1・e2が同じオブジェクトの場合、またはequals()メソッドにより等しいと判断される場合、e1とe2は等しい")]),t._v(" "),a("li",[t._v("e1・e2が数値の場合、倍精度浮動小数点数が等しい時のみe1とe2は等しい")]),t._v(" "),a("li",[t._v("その以外の場合、e1とe2は等しくない")])])]),t._v(" "),a("li",[t._v("e1 neq e2, e1 != e2 (等しくない)")]),t._v(" "),a("li",[t._v("e1 lt e2, e1 < e2 (小なり)")]),t._v(" "),a("li",[t._v("e1 lte e2, e1 <= e2 (小なりイコール)")]),t._v(" "),a("li",[t._v("e1 gt e2, e1 > e2 (大なり)")]),t._v(" "),a("li",[t._v("e1 gte e2, e1 >= e2 (大なりイコール)")])]),t._v(" "),a("h2",{attrs:{id:"論理演算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#論理演算子","aria-hidden":"true"}},[t._v("#")]),t._v(" 論理演算子")]),t._v(" "),a("ul",[a("li",[t._v("e1 or e2, e1 || e2 (論理和)")]),t._v(" "),a("li",[t._v("e1 and e2, e1 && e2 (論理積)")]),t._v(" "),a("li",[t._v("not e, ! e (論理否定)")])]),t._v(" "),a("h2",{attrs:{id:"連結演算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#連結演算子","aria-hidden":"true"}},[t._v("#")]),t._v(" 連結演算子")]),t._v(" "),a("ul",[a("li",[t._v("e1 + e2 (文字列連結)")])]),t._v(" "),a("h2",{attrs:{id:"メソッド・フィールドの呼び出し"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#メソッド・フィールドの呼び出し","aria-hidden":"true"}},[t._v("#")]),t._v(" メソッド・フィールドの呼び出し")]),t._v(" "),a("p",[t._v("以下のようにメソッド・フィールドの呼び出しができます。")]),t._v(" "),a("ul",[a("li",[t._v("e.method(args) (メソッドの呼び出し)")]),t._v(" "),a("li",[t._v("e.property (フィールドの呼び出し)")])]),t._v(" "),a("h2",{attrs:{id:"stringfunction-sf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stringfunction-sf","aria-hidden":"true"}},[t._v("#")]),t._v(" StringFunction(SF)")]),t._v(" "),a("p",[a("strong",[t._v("uroboroSQL")]),t._v("ではOGNL式を利用する際、標準で"),a("code",[t._v("StringFunction")]),t._v("（SF）を使用することができます。\nOGNL式と合わせて"),a("code",[t._v("StringFunction")]),t._v("クラスのメソッドを呼び出すことができます。")]),t._v(" "),a("ul",[a("li",[t._v("評価式で使用する場合")])]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IF SF.isNotEmpty(emp_no)*/")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('-- emp_noが null または "" でない場合に処理される')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*END*/")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("バインドパラメータと合わせて使用する場合")])]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("emp_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*SF.contains(emp_name)*/")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("escape")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- emp_name=Bobの場合、 emp_name like %Bob% escape '$' となる")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("StringFunction")]),t._v("が提供するメソッドの一覧")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("メソッド名")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("戻り値")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("説明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.isEmpty(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("booean")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("対象文字列が空文字であること判定する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.isNotEmpty(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("対象文字列が空文字でないことを判定する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.isBlank(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("対象文字列が空文字、もしくは空白であること判定する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.isNotBlank(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("対象文字列が空文字、もしくは空白でないこと判定する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.trim(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の前後の空白を除去する。nullを渡した場合は結果もnullとなる")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.trimToEmpty(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の前後の空白を除去する。nullを渡した場合は空文字となる")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.left(String str, int len)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の先頭から指定した文字数の文字列を取得する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.right(String str, int len)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の最後から指定した文字数の文字列を取得する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.mid(String str, int pos, int len)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の指定した位置から指定した文字数の文字列を取得する")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.rightPad(String str, int size)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の末尾に空白を埋めて指定された長さにする")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.rightPad(String str, int size, char padChar)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の末尾に指定した埋め込み文字を埋めて指定された長さにする")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.leftPad(String str, int size)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の先頭に空白を埋めて指定された長さにする")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.leftPad(String str, int size, char padChar)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の先頭に指定した埋め込み文字を埋めて指定された長さにする")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.split(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String[]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列を空白で区切って配列に格納する。nullが入力された場合はnullを返す")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.split(String str, char separatorChar)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String[]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列を指定した区切り文字で区切って配列に格納する。nullが入力された場合はnullを返す")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.split(String str, String separatorChars, int max)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String[]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列を指定した区切り文字で区切って配列に格納する。nullが入力された場合はnullを返す")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.capitalize(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の先頭文字を大文字にする")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.uncapitalize(String str)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文字列の先頭を小文字にする")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.startsWith(CharSequence text)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定されたテキストで始まるLIKE句用の検索文字列を生成する。引数のテキストはエスケープ処理される "),a("Badge",{attrs:{text:"0.12.0+"}})],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.contains(CharSequence text)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定されたテキストを含むLIKE句用の検索文字列を生成する。引数のテキストはエスケープ処理される "),a("Badge",{attrs:{text:"0.12.0+"}})],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("SF.endsWith(CharSequence text)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定されたテキストで終わるLIKE句用の検索文字列を生成する。数のテキストはエスケープ処理される "),a("Badge",{attrs:{text:"0.12.0+"}})],1)])])])])},[],!1,null,null,null);e.default=i.exports}}]);